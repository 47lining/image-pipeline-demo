# Copyright 2015 47Lining LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: "set bucket name"
  set_fact:
    bucket_name: "bucket-{{app_name~'-'~account_name~'-'~customer_name}}"
    bucket_template: "{{ cloudformation_template_instantiation_dir | expanduser }}/{{ customer_name }}/{{ cage_name }}/stackset/{{ stackset_name }}/bucket.json"

- name: Set credentials variable to desired role
  set_fact:
    role_credentials: "{{item.NucleatorBucketandqProvisioner}}"
  with_items:
    - "{{aws_environment_with_rolenames}}"
  no_log: True

- name: log credentials variable
  debug: var=role_credentials
  when: debug_credentials

- name: "provision cage via cloudformation"
  connection: local
  cloudformation:
    stack_name="{{ bucket_name }}"
    state=present
    region="{{cage_names[cage_name]["region"]}}"
    disable_rollback=yes
    template="{{ bucket_template }}"
  args:
  environment: role_credentials
  register: "bucket_provision_stack"

- name: show cloudformation output parameters
  action: debug msg="{{queue_provision_stack['stack_outputs']['PipelineQueueArn']}}"

- name: set queue arn
  set_fact:
     queue_arn: "{{queue_provision_stack['stack_outputs']['PipelineQueueArn']}}"

- name: Add initial empty metadata 'folder'
  local_action: shell
    AWS_ACCESS_KEY_ID="{{ role_credentials['AWS_ACCESS_KEY_ID']}}"
    AWS_SECRET_ACCESS_KEY="{{ role_credentials['AWS_SECRET_ACCESS_KEY'] }}"
    AWS_SECURITY_TOKEN="{{ role_credentials['AWS_SECURITY_TOKEN'] }}"
    aws s3api put-object --bucket "{{bucket_name}}" --key "metadata/"
  no_log: True

- name: Add notification options not supported via cloudformation
  local_action: shell
    AWS_ACCESS_KEY_ID="{{ role_credentials['AWS_ACCESS_KEY_ID']}}"
    AWS_SECRET_ACCESS_KEY="{{ role_credentials['AWS_SECRET_ACCESS_KEY'] }}"
    AWS_SECURITY_TOKEN="{{ role_credentials['AWS_SECURITY_TOKEN'] }}"
    aws s3api put-bucket-notification --bucket "{{bucket_name}}"
    --notification-configuration '{"QueueConfiguration":{"Event":"s3:ObjectCreated:*","Queue":"{{queue_arn}}"} }'
  no_log: True

- name: show all cloudformation output
  action: debug msg="{{bucket_provision_stack}}"

- name: show cloudformation output parameters
  action: debug msg="{{bucket_provision_stack['stack_outputs']}}"
